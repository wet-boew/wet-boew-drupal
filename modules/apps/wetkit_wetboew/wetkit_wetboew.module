<?php
/**
 * @file
 * Code for the wetkit_wetboew feature.
 */

include_once('wetkit_wetboew.features.inc');
include_once('wetkit_wetboew.menu_wetkit_load.inc');


/**
 * Implements hook_apps_app_info().
 */
function wetkit_wetboew_apps_app_info() {
  return array(
    'configure form' => 'wetkit_wetboew_configure_form',
  );
}

/**
 * Configuration Form for WetKit Magic
 */
function wetkit_wetboew_configure_form($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'system') . '/system.js');

  $form = array();

  $form['wetkit_wetboew'] = array(
    '#type' => 'fieldset',
    '#title' => t('WetKit jQuery Progressive Enhancement'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );
  $form['wetkit_wetboew']['wetkit_wetboew_dev'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Web Experience Toolkit: jQuery v3.0 Development Mode'),
    '#default_value' => variable_get('wetkit_wetboew_dev', 0),
    '#description' => t('Selecting this checkbox will enable the unminified development version of WET-BOEW JS files'),
  );
  $form['wetkit_wetboew']['wetkit_wetboew_intranet'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable the Intranet Progressive Theme.'),
    '#default_value' => variable_get('wetkit_wetboew_intranet', 0),
    '#description' => t('This will modify the theme by adding custom css and logic for the Intranet Progressive Theme'),
  );

  $form['#submit'][] = 'wetkit_wetboew_configure_form_submit';

  return system_settings_form($form);
}

/**
 * Handle submission of the WetKit Web Usability configuration page.
 */
function wetkit_wetboew_configure_form_submit($form, &$form_state) {
  drupal_flush_all_caches();
}

/**
 * Implements hook_css_alter().
 */
function wetkit_wetboew_css_alter(&$css) {
  // Installs the jquery.ui themeroller theme to the theme.
  if (isset($css['misc/ui/jquery.ui.theme.css']) && user_is_logged_in()) {
    $css['misc/ui/jquery.ui.theme.css']['data'] = drupal_get_path('module', 'wetkit_core') . '/css/wetkit-jquery-ui-theme.css';
  }
  else {
    unset($css['misc/ui/jquery.ui.theme.css']);
  }

  if (isset($css['misc/ui/jquery.ui.dialog.css'])) {
    unset($css['misc/ui/jquery.ui.dialog.css']);
  }

  if (isset($css['misc/ui/jquery.ui.tabs.css'])) {
    unset($css['misc/ui/jquery.ui.tabs.css']);
  }
}

/**
 * Implements hook_preprocess_status_messages().
 */
function wetkit_wetboew_preprocess_status_messages(&$variables) {
  if (!drupal_installation_attempted()) {
    $variables['theme_hook_suggestions'][] = 'wetkit_status_messages';
  }
}

/**
 * Custom Template
 *
 * Implements WET Messages: Alert, Attention, and General Information
 * TODO: Note, Q&A, Tools, Work in Progress, Refer, Summary, Archive
 */
function theme_wetkit_status_messages($variables) {
  $display = $variables['display'];
  $output = '';

  $status_heading = array(
    'status' => t('Status message'),
    'error' => t('Error message'),
    'warning' => t('Warning message'),
  );
  foreach (drupal_get_messages($display) as $type => $messages) {
    $extraclass = '';
    $spanclass = (drupal_is_front_page()) ? 'span-8' : 'span-6';
    switch ($type) {
      case 'warning':
        $extraclass = $spanclass . ' module-alert';
        break;
      case 'error':
        $extraclass = $spanclass . ' module-attention';
        break;
      case 'status':
        $extraclass = $spanclass . ' module-info';
        break;
      default:
        $extraclass = '';
    }
    $current_path = current_path();
    if (path_is_admin($current_path)) {
      $extraclass = 'messages';
    }
    $output .= "<section><div class=\"$extraclass $type\">\n";
    if (!empty($status_heading[$type])) {
      $output .= '<h3 class="font-xlarge"><span class="color-dark">' . $status_heading[$type] . "</span></h3>\n";
    }
    if (count($messages) > 1) {
      $output .= " <ul>\n";
      foreach ($messages as $message) {
        $output .= '  <li>' . $message . "</li>\n";
      }
      $output .= " </ul>\n";
    }
    else {
      $output .= '<ul><li>' . $messages[0] . "</li></ul>\n";
    }
    $output .= "</div></section><div class=\"clear\"></div>\n";
  }
  return $output;
}

/**
 * Implements hook_theme().
 */
function wetkit_wetboew_theme($existing, $type, $theme, $path) {
  return array(
    'wetkit_status_messages' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Implements of hook_ctools_plugin_directory().
 */
function wetkit_wetboew_ctools_plugin_directory($module, $plugin) {
  return 'plugins/' . $plugin;
}

/**
 * Implements hook_page_alter().
 */
function wetkit_wetboew_page_alter(&$page) {
  //Hides the toolbar for administrator users if enabled
  if (module_exists('toolbar')) {
    global $user;
    if (in_array("administrator", $user->roles)) {
      unset($page['page_top']['toolbar']);
    }
  }
}

/**
 * Implements hook_enable().
 */
function wetkit_wetboew_init() {
  //Set Flag
  if ((variable_get('wetkit_wetboew_load', 1) == 1)) {
    drupal_flush_all_caches();
    variable_set('wetkit_wetboew_load', 0);
  }
  //Set Documentation Text
  if ((variable_get('wetkit_wetboew_doc', 1) == 1) && user_is_logged_in()) {
    drupal_set_message(t('Please proceed to the <a href="@settings">WetKit Web Usability Page</a> to configure additional settings.', array('@settings' => url('admin/config/wetkit_wetboew/settings'))), 'status');
    drupal_set_message(t('Please read the online <a href="@documentation">Documentation</a>', array('@documentation' => url('https://github.com/wet-boew/wet-boew-drupal/wiki'))), 'warning');
    variable_set('wetkit_wetboew_doc', 0);
  }

  //Only use WET-BOEW on Front End
  global $theme;
  $current_path = current_path();
  if (!path_is_admin($current_path) && $theme != 'rubik') {
    //Add WET-BOEW Source Library using Libraries API
    if (($library = libraries_detect('wet-boew', NULL, 'source')) && !empty($library['variants']['source']['installed'])) {
      // Do something with the library here.
      libraries_load('wet-boew', 'source');
    }
    //Add WET-BOEW Default (Minified) Library using Libraries API
    elseif (($library = libraries_detect('wet-boew')) && !empty($library['installed'])) {
      // Do something with the library here.
      libraries_load('wet-boew');
      drupal_add_css(drupal_get_path('module', 'wetkit_wetboew') . '/css/wetkit_wetboew.css', array('group' => CSS_THEME, 'every_page' => TRUE));
    }
  }
}

/**
 * Implements hook_libraries_info().
 */
function wetkit_wetboew_libraries_info() {
 // A very simple library. No changing APIs (hence, no versions), no variants.
  // Expected to be extracted into 'sites/all/libraries/wet-boew'.
  $libraries['wet-boew'] = array(
    'name' => 'WET-BOEW JS',
    'vendor url' => 'https://github.com/wet-boew/wet-boew',
    'download url' => 'https://github.com/wet-boew/wet-boew/downloads',
    'version arguments' => array(
      // It can be easier to parse the first characters of a minified file
      // instead of doing a multi-line pattern matching in a source file. See
      // 'lines' and 'cols' below.
      // Use minified JS by Default
      'file' => 'src/js/pe-ap.js',
      // Best practice: Document the actual version strings for later reference.
      // 2.x: this.majorVersion="2";this.minorVersion="1.3"
      // 3.x: majorVersion:'3',minorVersion:'2.0.1'
      'pattern' => '@version\s+([0-9a-zA-Z\.-]+)@',
      'lines' => 50,
      'cols' => 100,
    ),
    'files' => array(
      'css' => array(
        'build/grids/css/util-min.css' => array('preprocess' => FALSE, 'weight' => 5),
        'build/grids/css/util-ie-min.css' => array('browsers' => array('IE' => 'lte IE 8', '!IE' => FALSE), 'group' => CSS_DEFAULT, 'every_page' => TRUE, 'preprocess' => FALSE, 'weight' => 5),
        'build/js/css/pe-ap-ie-min.css' => array('browsers' => array('IE' => 'lte IE 8', '!IE' => FALSE), 'group' => CSS_DEFAULT, 'every_page' => TRUE, 'preprocess' => FALSE, 'weight' => 5),
        'build/theme-gcwu-fegc/css/theme-ie-min.css' => array('browsers' => array('IE' => 'lte IE 8', '!IE' => FALSE), 'group' => CSS_DEFAULT, 'every_page' => TRUE, 'preprocess' => FALSE, 'weight' => 5),
        'build/js/css/pe-ap-min.css' => array('browsers' => array('IE' => 'gt IE 8', '!IE' => TRUE), 'preprocess' => FALSE, 'weight' => 5),
        'build/theme-gcwu-fegc/css/theme-min.css' => array('browsers' => array('IE' => 'gt IE 8', '!IE' => TRUE), 'preprocess' => FALSE, 'weight' => 5),
      ),
      'js' => array(
        'build/theme-gcwu-fegc/js/theme-min.js' => array('scope' => 'footer', 'weight' => 5),
        'build/js/settings.js' => array('scope' => 'footer', 'weight' => 5),
        'build/js/pe-ap-min.js' => array('scope' => 'footer', 'weight' => 5),
      ),
    ),
    // Optional: Specify alternative variants of the library, if available.
    'variants' => array(
      // All properties defined for 'source' override top-level properties.
      'source' => array(
        'files' => array(
          'js' => array(
            'src/theme-gcwu-fegc/js/theme.js' => array('scope' => 'footer', 'weight' => 5),
            'src/js/workers/menubar.js' => array('scope' => 'footer', 'weight' => 5),
            'src/js/workers/toolbar.js' => array('scope' => 'footer', 'weight' => 5),
            'src/js/settings.js' => array('scope' => 'footer', 'weight' => 5),
            'src/js/pe-ap.js' => array('scope' => 'footer', 'weight' => 5),
          ),
        ),
        'variant callback' => 'wetkit_wetboew_check_variant',
        'variant arguments' => array(
          'variant' => 'source',
        ),
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements wetkit_wetboew_check_variant().
 */
function wetkit_wetboew_check_variant($libary, $variant) {
  if ((variable_get('wetkit_wetboew_dev', 0) == 1)) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_menu_block_blocks().
 */
function wetkit_wetboew_menu_block_blocks() {
  // The array key is the block delta used by menu block.
  return array(
    'wetkit_menu_blocks-1' => array(
      'menu_name'   => 'main-menu',
      'parent_mlid' => 0,
      'title_link'  => 0,
      'admin_title' => 'Mega Menu',
      'level'       => 1,
      'follow'      => 0,
      'depth'       => 0,
      'expanded'    => 1,
      'sort'        => 0,
    ),
    'wetkit_menu_blocks-2' => array(
      'menu_name'   => 'menu-wet-mid-footer',
      'parent_mlid' => 0,
      'title_link'  => 0,
      'admin_title' => 'Footer Block',
      'level'       => 1,
      'follow'      => 0,
      'depth'       => 0,
      'expanded'    => 1,
      'sort'        => 0,
    ),
  );
}
