<?php
/**
 * @file
 * Metatag integration for the wetkit_metatag module.
 */

/**
 * Dublin Core Configuration Page.
 */
function wetkit_metatag_menu() {
  $items = array();

  // Setup a local task to configure Dublin Core.
  $items['admin/config/search/metatags/dublin-core'] = array(
    'title' => 'Dublin Core',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wetkit_metatag_config'),
    'access arguments' => array('administer meta tags'),
    'weight' => 1,
    'file' => 'wetkit_metatag.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_page_build().
 */
function wetkit_metatag_page_build(&$page) {
  // TODO - When the HTML5 is standardize we can then update and display
  /*
  $attributes = array(
    'rel' => 'schema.DC',
    'href' => 'http://purl.org/dc/elements/1.1/',
  );
  drupal_add_html_head_link($attributes);
  $attributes = array(
    'rel' => 'schema.DCTERMS',
    'href' => 'http://purl.org/dc/terms/',
  );
  drupal_add_html_head_link($attributes);
  */
}

/**
 * Implements hook_form_alter().
 */
function wetkit_metatag_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'wetkit_page_node_form' || $form_id == 'wetkit_page_other_node_form') {
    $form['metatags_advanced'] = $form['metatags']['advanced'];
    $form['metatags_advanced']['#title'] = 'Metatags Advanced';
    $form['metatags_advanced']['#group'] = 'additional_settings';
    $form['metatags_advanced']['##tree'] = TRUE;
    $form['metatags_advanced']['#weight'] = 11;
    $form['wetkit_metadata'] = $form['metatags']['wetkit-metadata'];
    $form['wetkit_metadata']['#title'] = 'Metatags WetKit';
    $form['wetkit_metadata']['#group'] = 'additional_settings';
    $form['wetkit_metadata']['##tree'] = TRUE;
    $form['wetkit_metadata']['#weight'] = 12;
  }
  unset($form['metatags']['advanced']);
  unset($form['metatags']['tokens']);
  unset($form['metatags']['wetkit-metadata']);
}

/**
 * Implements hook_ctools_plugin_api().
 */
function wetkit_metatag_ctools_plugin_api($owner, $api) {
  if ($owner == 'metatag' && $api == 'metatag') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_theme().
 */
function wetkit_metatag_theme() {
  $info['wetkit_metatag'] = array(
    'render element' => 'element',
  );

  return $info;
}

/**
 * Theme callback for a Dublin Core meta tag.
 */
function theme_wetkit_metatag($variables) {
  $element = &$variables['element'];
  element_set_attributes($element, array(
    '#name' => 'name',
    '#schema' => 'title',
    '#value' => 'content')
  );
  unset($element['#value']);
  return theme('html_tag', $variables);
}

/**
 * Get the Dublin Core prefix.
 */
function _wetkit_dc_prefix() {
  return variable_get('wetkit_metatag_prefix', 'dcterms');
}

/*
Dublin Core Basic Elements (15)
dc:title
dc:creator
dc:subject
dc:description
dc:publisher
dc:contributor
dc:date
dc:type
dc:format
dc:identifier
dc:source
dc:language
dc:relation
dc:coverage
dc:rights
 */
