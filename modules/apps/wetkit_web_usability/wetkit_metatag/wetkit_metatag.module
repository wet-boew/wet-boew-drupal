<?php

/**
 * Implements hook_ctools_plugin_api().
 */
function wetkit_metatag_ctools_plugin_api($owner, $api) {
  if ($owner == 'metatag' && $api == 'metatag') {
    return array('version' => 1);
  }
}

function wetkit_metatag_form_alter(&$form, &$form_state, $form_id) {
   if ($form_id == 'wetkit_page_node_form' || $form_id == 'wetkit_page_other_node_form') {
    $form['metatags_advanced'] = $form['metatags']['advanced'];
    $form['metatags_advanced']['#title'] = 'Metatags Advanced';
    $form['metatags_advanced']['#group'] = 'additional_settings';
    $form['metatags_advanced']['##tree'] = TRUE;
    $form['metatags_advanced']['#weight'] = 11;
    
    $form['wetkit_metadata'] = $form['metatags']['wetkit-metadata'];
    $form['wetkit_metadata']['#title'] = 'Metatags WetKit';
    $form['wetkit_metadata']['#group'] = 'additional_settings';
    $form['wetkit_metadata']['##tree'] = TRUE;
    $form['wetkit_metadata']['#weight'] = 12;
  }
  
  unset($form['metatags']['advanced']);
  unset($form['metatags']['tokens']);
  unset($form['metatags']['wetkit-metadata']);
}

/**
 * Implements hook_theme().
 */
function wetkit_metatag_theme() {
  $info['wetkit_metatag'] = array(
    'render element' => 'element',
  );
  $info['wetkit_metatag_scheme'] = array(
    'render element' => 'element',
  );
  $info['wetkit_metatag_language'] = array(
    'render element' => 'element',
  );
  $info['wetkit_metatag_title'] = array(
    'render element' => 'element',
  );
  return $info;
}

/**
 * Theme callback for an WetKit meta tag.
 */
function theme_wetkit_metatag($variables) {
  $element = &$variables['element'];
  element_set_attributes($element, array('#name' => 'name', '#value' => 'content'));
  unset($element['#value']);
  return theme('html_tag', $variables);
}

/**
 * Theme callback for an WetKit meta tag.
 */
function theme_wetkit_metatag_scheme($variables) {
  $element = &$variables['element'];
  element_set_attributes($element, array('#name' => 'name', '#value' => 'content'));
  $element['#attributes']['scheme'] = 'W3CDTF';
  unset($element['#value']);
  return theme('html_tag', $variables);
}

/**
 * Theme callback for an WetKit meta tag (language).
 */
function theme_wetkit_metatag_language($variables) {
  $element = &$variables['element'];
  element_set_attributes($element, array('#name' => 'name', '#value' => 'content'));
  $element['#attributes']['scheme'] = 'ISO639-2/T';
  unset($element['#value']);
  return theme('html_tag', $variables);
}

/**
 * Theme callback for an WetKit meta tag.
 */
function theme_wetkit_metatag_title($variables) {
  $element = &$variables['element'];
  element_set_attributes($element, array('#name' => 'name', '#value' => 'content'));
  $element['#attributes']['name'] = 'title';
  unset($element['#value']);
  return theme('html_tag', $variables);
}

/**
 * Get Current Language of User Interface
 */
function wetkit_current_lang() {
  global $language;
  if ($language->name == 'French') {
    $val_lang = "fra";
  }
  else {
    $val_lang = "eng";
  }
  return $val_lang;
}

