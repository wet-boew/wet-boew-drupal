<?php
/**
 * @file
 * Code for the wetkit_search feature.
 */

include_once('wetkit_search.features.inc');

/**
* Implements hook_facetapi_facet_info().
*/
function wetkit_search_facetapi_facet_info($searcher_info) {
    $facets = array();
    $facets['ss_language'] = array(
      'field' => 'ss_language',
      'label' => t('Language'),
      'description' => t('Language'),
    );
    return $facets;
}

/**
* Implements hook_apachesolr_query_alter().
*/
function wetkit_search_apachesolr_query_alter(DrupalSolrQueryInterface $query) {
  $solr_core = $query->getPath();
  
  if (preg_match("/site/i", $solr_core)) {
    global $language;
    if ($language->name == 'French') {
      $val_lang = "fr";
    }
    else {
      $val_lang = "en";
    }
    $query->addParam('fq','ss_language:' . $val_lang);
  }
  
  if (preg_match("/file/i", $solr_core)) {
    global $language;
    if ($language->name == 'French') {
      $val_lang = "fr";
    }
    else {
      $val_lang = "en";
    }
    //$query->addParam('fq','ss_language:' . $val_lang);
	  $query->addParam('fq','sm_parent_entity_bundle:' . 'node-accredited_client_listing');
    $query->addParam('fl','path_alias');
    $query->addParam('fl','site');
  } 
}

/**
* Implements hook_apachesolr_query_alter().
*/
function wetkit_search_apachesolr_query_prepare(DrupalSolrQueryInterface $query) {
  $solr_core = $query->getPath();
  global $language;
  
  //'score' => array('title' => t('Relevancy'), 'default' => 'desc'),
  //'sort_label' => array('title' => t('Title'), 'default' => 'asc'),
  //'bundle' => array('title' => t('Type'), 'default' => 'asc'),
  //'sort_name' => array('title' => t('Author'), 'default' => 'asc'),
  //'ds_created' => array('title' => t('Date'), 'default' => 'desc'),
  
  $query->removeAvailableSort('score');
  $query->removeAvailableSort('sort_label');
  $query->removeAvailableSort('bundle');
  $query->removeAvailableSort('sort_name');
  $query->removeAvailableSort('ds_created');
  
  if (preg_match("/file/i", $solr_core)) {
    $query->setAvailableSort('ds_created', array(
      'title' => t('Date'), 
      'default' => 'asc', // or 'desc'
    ));
    $query->setAvailableSort('score', array(
      'title' => t('Relevance'), 
      'default' => 'asc', // or 'desc'
    ));
    $query->setAvailableSort('sort_label', array(
      'title' => t('Title'), 
      'default' => 'asc', // or 'desc'
    ));
  } 
  
  if (preg_match("/site/i", $solr_core)) {
    $query->setAvailableSort('ds_created', array(
      'title' => t('Date'), 
      'default' => 'asc', // or 'desc'
    ));
    $query->setAvailableSort('score', array(
      'title' => t('Relevance'), 
      'default' => 'asc', // or 'desc'
    ));
    $query->setAvailableSort('sort_label', array(
      'title' => t('Title'), 
      'default' => 'asc', // or 'desc'
    ));
  }
  
}

/**
* Implements hook_apachesolr_process_results().
*/
function wetkit_search_apachesolr_process_results(&$results, DrupalSolrQueryInterface $query) {
  foreach ($results as $id => $result) {
    if ($results[$id]['fields']['bundle_name'] == 'File') {
      $title = $results[$id]['snippet'];
      $results[$id]['link'] = $results[$id]['link'] . '/' . $results[$id]['fields']['path_alias'];
    }
  }
}

/**
* Implements hook_preprocess_results().
*/
function wetkit_search_preprocess_search_results(&$variables) {
  foreach ($variables['results'] as $id => $result) {
    
  }
}

/**
* Implements hook_apachesolr_search_page_alter().
*/
function wetkit_search_apachesolr_search_page_alter($build, $search_page) {
  //dpm($build);
  //dpm($search_page);
}

/**
* Implements _wetkit_search_getTextBetweenTags().
*/
function _wetkit_search_getTextBetweenTags($string, $tagname) {
    $pattern = "/<$tagname ?.*>(.*)<\/$tagname>/";
    preg_match($pattern, $string, $matches);
    return $matches[1];
}

/**
* Implements hook_apachesolr_search_types_alter().
*/
function wetkit_search_apachesolr_search_types_alter($search_types) {
  //dpm($search_types);
}
