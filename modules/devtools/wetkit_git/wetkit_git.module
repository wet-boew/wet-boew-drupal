<?php
/**
 * @file
 * Git integration for the wetkit_git module.
 */

/**
 * Implements hook_menu().
 */
function wetkit_git_menu() {
  $items['git_update'] =  array(
    'page callback' => '_git_update',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements _git_update().
 */
function _git_update() {
  exec('cd profiles/wetkit; git pull');

  // Get the current revision
  exec('cd profiles/wetkit; git rev-parse HEAD', $x);
  if (is_array($x)) {
    $info_sha = drupal_substr($x[0], 0, 7);
  }
  // Get information about the remote origin
  exec('cd profiles/wetkit; git remote show origin | grep Fetch', $y);
  if (is_array($y)) {
    $info_url = $y[0];
  }

  if (isset($info_sha) && isset($info_url)) {
    drupal_set_message(t('Git updated to: @info_sha from: @info_url', array('@info_sha' => $info_sha, '@info_url' => $info_url)));
    drupal_goto('admin/reports/status');
  }
}

/**
 * Implements hook_requirements().
 */
function wetkit_git_requirements($phase) {
  $requirements = array();
  $t = get_t();

  // Get the current revision
  exec('cd profiles/wetkit; git rev-parse HEAD', $x);
  if (is_array($x)) {
    $info_sha = drupal_substr($x[0], 0, 7);
  }

  // Get information about the remote origin
  exec('cd profiles/wetkit; git remote show origin | grep Fetch', $y);
  if (is_array($y)) {
    $info_url = $y[0];
  }

  switch ($phase) {
    case 'runtime':
      $requirements['wetkit_git'] = array(
        'title' => $t('Git Revision'),
        'value' =>  t('SHA Commit: @info_sha <br /> To update the current revision of Git from upstream: <a href="@git_update">Click Here</a> <br /> @info_url', array('@info_sha' => $info_sha, '@git_update' => url('git_update'), '@info_url' => $info_url)),
        'severity' => REQUIREMENT_OK,
      );
      break;
  }
  return $requirements;
}
