<?php
/**
 * @file
 * Code for the wetkit_deployment_service feature.
 */

include_once 'wetkit_deployment_service.features.inc';

/**
 * Implements hook_entity_uuid_presave().
 */
function wetkit_deployment_service_entity_uuid_presave(&$entity, $entity_type) {
  // Prepare any entities that leverage panelizer.
  if (!empty($entity->panelizer_export)) {
    $entity->panelizer = unserialize($entity->panelizer_export);
    unset($entity->panelizer_export);

    list($id, $vid) = entity_extract_ids($entity_type, $entity);

    $query = db_select('panelizer_entity', 'p');
    $query
      ->condition('p.entity_type', $entity_type, '=')
      ->condition('p.entity_id', $id, '=');
    if ($vid) {
      $query->condition('p.revision_id', $vid, '=');
    }
    $result = $query
      ->fields('p', array('name'))
      ->execute()
      ->fetchField();

    // If the panelizer exists it should be updated.
    if ($result !== FALSE) {
      // Set parent entity's ids. UUID doesn't create new revision on rebuild,
      // so these should be current ones.
      $entity->panelizer->entity_id = $id;
      $entity->panelizer->revision_id = $vid;
    }
    $entity->panelizer->did = 0;

    // Only last display is stored.
    $entity->panelizer->display_is_modified = FALSE;
  }

  // Prepare any entities that leverage panelizer.
  if (!empty($entity->workbench_moderation_export)) {
    $entity->workbench_moderation = unserialize($entity->workbench_moderation_export);
    unset($entity->workbench_moderation_export);

    list($id, $vid) = entity_extract_ids($entity_type, $entity);

    watchdog('Devel: Deployment service load', 'Output of %entity.', array('%entity' => print_r($entity, TRUE)), WATCHDOG_NOTICE);
    watchdog('Devel: Deployment service load', 'Output of %id and $vid.', array('%id' => $id, '%vid' => $vid), WATCHDOG_NOTICE);
  }
}

/**
 * Implements hook_services_resources_alter().
 */
function wetkit_deployment_service_services_resources_alter(&$resources, &$endpoint) {
  //$resources['file']['operations']['delete']['access callback'] = '_wetkit_deployment_service_access_file';
  //$resources['file']['operations']['retrieve']['access callback'] = '_wetkit_deployment_service_access_file';
  //$resources['file']['operations']['update']['access callback'] = '_wetkit_deployment_service_access_file';
}

/**
 * Custom Access File Callback.
 */
function _wetkit_deployment_service_access_file() {
  return TRUE;
}
