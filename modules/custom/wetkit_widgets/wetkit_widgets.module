<?php

include_once('wetkit_widgets.features.inc');
include_once('wetkit_widgets.plugins.inc');

/**
 * Implements hook_apps_app_info().
 */
function wetkit_widgets_apps_app_info() {
  return array(
    'configure form' => 'wetkit_widgets_configure_form',
  );
}

/**
 * Configuration Form for WetKit Magic
 */
function wetkit_widgets_configure_form($form, &$form_state) {
  $form = array();

  return system_settings_form($form);
}

/**
 * Implements hook_init().
 */
function wetkit_widgets_init() {

}

/**
 * Implements hook_ctools_plugin_directory().
 */
function wetkit_widgets_ctools_plugin_directory($module, $plugin) {
  return 'plugins/' . $plugin;
}

/**
 * Implements hook_field_widget_form_alter().
 *
 * Create default values on fieldable_panels_pane fields when appropriate. 
 */
function wetkit_widgets_field_widget_form_alter(&$element, &$form_state, $context) {
  // Determine if we should use demo content.
  $use_default_content = variable_get('panopoly_widgets_enable_default_content', 1);
  if (!empty($use_default_content) && empty($element['#default_value']) && $context['instance']['entity_type'] == 'fieldable_panels_pane') {

    // Do a switch on field type and set #default_values. Also (conditionally) stuff $form_state values so previews work correctly.
    switch($context['field']['type']) {
      case 'wetkit_tabbed_interface':
        $element['title']['#default_value'] = 'Tabbed Interface 1';
        $element['link']['#default_value'] = 'http://drupal.org';
        $element['description']['#default_value'] = 'Sample description content for the WetKit Tabbed Interface fieldable panel pane.';
        
        if (empty($form_state['values'][$context['field']['field_name']][$context['langcode']][0])) {
          $form_state['values'][$context['field']['field_name']][$context['langcode']][0] = array(
            'title' => $element['title']['#default_value'],
            'link' => $element['link']['#default_value'],
            'description' => $element['description']['#default_value'],
          );
        }
        break;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function wetkit_widgets_form_alter(&$form, &$form_state, $form_id) {

  if (variable_get('panopoly_widgets_enable_default_content', 1)) {
    $clicked_button = empty($form_state['clicked_button']['#value']) ? '' : $form_state['clicked_button']['#value'];
    if ($form_id == 'fieldable_panels_panes_fieldable_panels_pane_content_type_edit_form' && ($clicked_button == 'Update Preview' || ($form_state['op'] == 'add' && empty($form_state['input']['form_build_id'])))) {

      // Quick modification to get the spotlight to render correctly with preview content
      if ($form_state['op'] == 'add' && empty($form_state['input']['form_build_id']) && !empty($form_state['field']['field_tabbed_interface'])) {
        $form_state['values']['field_tabbed_interface']['und'][0]['fid'] = variable_get('wetkit_widgets_default_tabbed_interface_fid', NULL);
        $form['field_tabbed_interface']['und'][0]['fid']['#default_value'] = variable_get('wetkit_widgets_default_tabbed_interface_fid', NULL);
      }
    }
  }
}

/**
 * Implement the "Content Settings" fieldset in a pre-render. This fixes issues with image caused by initially
 * doing this in a form_alter.
 *
 * @see http://drupal.org/node/1567704
 */
function wetkit_widgets_fieldable_panel_pane_pre_render($element) {
  // Add a content settings fieldset.
  $element['content_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Content Settings'),
    '#weight' => 1,
  );

  // Add any remaining fields to the content settings fieldset.
  foreach ($element as $key => $value) {
    if (substr($key, 0, 6) == 'field_' || $key == 'body') {
      $element['content_settings'][$key] = $value;
      unset($element[$key]);
    }
    if (drupal_substr($key, 0, 8) == 'language') {
      $element['content_settings'][$key] = $value;
      unset($element[$key]);
    }
  }

  return $element;
}

/**
 * Implements hook_entity_info_alter().
 */
function wetkit_widgets_entity_info_alter(&$entity_info) {

  // Tabbed Interface
  $entity_info['fieldable_panels_pane']['bundles']['tabbed_interface'] = array(
    'label' => t('Add tabbed interface'),
    'pane category' => t('WetKit'),
    'pane top level' => TRUE,
    'pane icon' => drupal_get_path('module', 'wetkit_widgets') . '/images/icon_tabbed_interface.png',
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/tabbed-interface',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );

}

/**
 * Implementation hook_theme_registry_alter()
 */
function wetkit_widgets_theme_registry_alter(&$theme_registry) {
  $mod_path = drupal_get_path('module', 'wetkit_widgets') . '/templates';
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'pow', $mod_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
}

/**
 * Implements hook_theme().
 */
function wetkit_widgets_theme($existing, $type, $theme, $path) {
  return array(
    'fieldable_panels_pane' => array(
      'render element' => 'elements',
      'template'  => 'templates/fieldable_panels_pane/wetkit-widgets-fieldable-panels-pane',
      'path' => drupal_get_path('module', 'wetkit_widgets'),
    ),
    'wetkit_tab_interface_view' => array(
      'variables' => array(
        'items' => NULL,
        'delta' => NULL,
        'settings' => NULL,
      ),
    ),
  );
}