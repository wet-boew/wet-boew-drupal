<?php
/**
 * @file
 * Code for the wetkit_language feature.
 */

include_once 'wetkit_language.features.inc';

/**
 * Implements hook_form_alter().
 */
function wetkit_language_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'wetkit_page_node_form' || $form_id == 'wetkit_page_other_node_form') {
    unset($form['translation']);
  }
}

/**
 * Implements hook_preprocess_page().
 */
function wetkit_language_preprocess_page(&$vars) {
  // Language Switcher Code.
  $vars['menu_lang_bar'] = _wetkit_language_lang_switcher();
}

/**
 * Implements hook_preprocess_panes_pane().
 */
function wetkit_language_preprocess_panels_pane(&$vars) {
  if ($vars['pane']->type == 'node_links') {
    if (isset($vars['content']['translation'])) {
      unset($vars['content']['translation']);
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function wetkit_language_preprocess_maintenance_page(&$vars) {
  // Language Switcher Code.
  $vars['menu_lang_bar'] = _wetkit_language_lang_switcher();
}

/**
 * Implements _wetkit_language_lang_switcher().
 */
function _wetkit_language_lang_switcher() {
  global $language;
  $term = '';
  $language_paths = '';
  $language_terms = '';

  $languages = language_list('enabled');
  $path = drupal_is_front_page() ? '<front>' : $_GET['q'];

  // Handle node translations.
  if (arg(0) == 'node' && arg(1) > 0) {
    $node_path = 'node/' . arg(1);
    $language_paths = translation_path_get_translations($node_path);
  }

  // Handle term translations.
  if (arg(0) == 'taxonomy' && arg(1) == 'term' && arg(2) > 0) {
    $term = taxonomy_get_term_by_name(arg(2));
    $language_terms = i18n_taxonomy_term_get_translation(array('tid' => arg(2)), $language->language);
  }

  if (count($languages[1]) > 1) {
    $lang_switcher = array();
    foreach ($languages[1] as $lang) {
      if ($lang->language != $language->language) {
        $modifier = $lang->native;
        // We are translating a node so will check if missing translations.
        if ($language_paths && !empty($language_paths[$lang->language])) {
          $path = $language_paths[$lang->language];
        }
        // We are translating a term.
        if ($term) {
          $path = 'taxonomy/term/' . $language_terms[$lang->language]->tid;
        }
        $attributes = array('class' => array('link'), 'lang' => $lang->language);
        $lang_switcher[] = l($modifier, $path, array('attributes' => $attributes, 'language' => $lang));
      }
    }
    return implode('<br />', $lang_switcher);
  }
}
